services:
  api_service:
    build: .
    container_name: fastapi_app
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    ports:
      - "8001:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - face_net

  celery_worker:
    build: .
    command: celery -A worker.celery worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - .:/usr/src/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0 
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - face_net
  dashboard:
    build: .
    command: celery --broker=redis://redis:6379/0 flower --port=8000
    ports:
      - 5008:8000
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - face_net
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   ports:
  #     - "5672:5672"     # AMQP protocol
  #     - "15672:15672"   # RabbitMQ management UI
  #   networks:
  #     - face_net
  #   healthcheck:
  #     test: ["CMD", "rabbitmq-diagnostics", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  redis:
    image: redis:7
    hostname: redis
    container_name: redis
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - face_net

networks:
  face_net:
    driver: bridge
